{
  "uid" : "8d29aad905b23491",
  "name" : "输入正确的验证码和手机号码,tenant_type为1登录",
  "fullName" : "testcases.service_testing.MiniPro.test_login.TestLoin#test_minilogin_0003",
  "historyId" : "9d5de0379003555cb9f582e32cc738e6",
  "time" : {
    "start" : 1594631308623,
    "stop" : 1594631309337,
    "duration" : 714
  },
  "description" : "\n                        输入正确的验证码和手机号码,tenant_type为1登录\n\n        ",
  "descriptionHtml" : "<pre><code>                    输入正确的验证码和手机号码,tenant_type为1登录\n</code></pre>\n",
  "status" : "failed",
  "statusMessage" : "pytest_assume.plugin.FailedAssumption: \nOriginal Failure:\n\n>> TypeError(\"'NoneType' object is not subscriptable\")\n\n2 Failed Assumptions:\n\ntestcases\\service_testing\\MiniPro\\test_login.py:139: AssumptionFailure\n>>\tpytest.assume(response['Code'] == 0)\nAssertionError: assert False\n\ntestcases\\service_testing\\MiniPro\\test_login.py:140: AssumptionFailure\n>>\tpytest.assume(response['Desc'] == '成功')\nAssertionError: assert False",
  "statusTrace" : "self = <autotest.testcases.service_testing.MiniPro.test_login.TestLoin object at 0x000001BB790E1F28>\n\n    @allure.feature('小程序登录')\n    @allure.story('登录')\n    @allure.title('输入正确的验证码和手机号码,tenant_type为1登录')\n    @allure.severity('blocker')\n    def test_minilogin_0003(self):\n        \"\"\"\n                        输入正确的验证码和手机号码,tenant_type为1登录\n    \n        \"\"\"\n        print('\\n{}测试开始\\n'.format(self.test_minilogin_0003.__name__))\n        with allure.step('step1:获取验证码'):\n            # 获取身份证已审核通过的手机号码\n            mobilesql = f\"select mobile,uuid,guid from member_user where uuid <> 0 order by user_id desc limit 1\"\n            res = self.db.selectsql(mobilesql)\n            mobile=res[0][0]\n            uuid=res[0][1]\n            guid=res[0][2]\n            #获取验证码\n            reqdata = databuild(SPhone=mobile)\n            res = self.directsq.sendRequests(get_vcode_api, reqdata)\n            pytest.assume(res.json()['Code'] == 0)\n            pytest.assume(res.json()['Desc'] == '成功')\n            code = res.json()['Data']\n        with allure.step('step2:输入正确的手机号码和验证码登录'):\n            #登录\n            reqdata = databuild(mobile=mobile, vcode=code, tenant_type=1)\n            res = self.directsq.sendRequests(applet_Login_api, reqdata)\n            pytest.assume(res.status_code == 200)\n            response = res.json()\n            pytest.assume(response['Code'] == 0)\n            pytest.assume(response['Desc'] == '成功')\n        with allure.step('step2:校验接口返回的数据'):\n            # 拼接client_id和zt_client_id\n            client_id = zp_tenant_id + '-' + str(guid)\n            zt_client_id = zp_tenant_id + '-' + str(guid)\n            # 校验client_id和zt_client_id\n>           pytest.assume(response['Data']['client_id'] == client_id)\nE           pytest_assume.plugin.FailedAssumption: \nE           Original Failure:\nE           \nE           >> TypeError(\"'NoneType' object is not subscriptable\")\nE           \nE           2 Failed Assumptions:\nE           \nE           testcases\\service_testing\\MiniPro\\test_login.py:139: AssumptionFailure\nE           >>\tpytest.assume(response['Code'] == 0)\nE           AssertionError: assert False\nE           \nE           testcases\\service_testing\\MiniPro\\test_login.py:140: AssumptionFailure\nE           >>\tpytest.assume(response['Desc'] == '成功')\nE           AssertionError: assert False\n\ntestcases\\service_testing\\MiniPro\\test_login.py:146: FailedAssumption",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "weblogin",
    "time" : {
      "start" : 1594631305945,
      "stop" : 1594631306348,
      "duration" : 403
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "_Class__pytest_setup_method",
    "time" : {
      "start" : 1594631308614,
      "stop" : 1594631308623,
      "duration" : 9
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "_Class__pytest_setup_class",
    "time" : {
      "start" : 1594631307083,
      "stop" : 1594631307267,
      "duration" : 184
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "\n                        输入正确的验证码和手机号码,tenant_type为1登录\n\n        ",
    "status" : "failed",
    "statusMessage" : "pytest_assume.plugin.FailedAssumption: \nOriginal Failure:\n\n>> TypeError(\"'NoneType' object is not subscriptable\")\n\n2 Failed Assumptions:\n\ntestcases\\service_testing\\MiniPro\\test_login.py:139: AssumptionFailure\n>>\tpytest.assume(response['Code'] == 0)\nAssertionError: assert False\n\ntestcases\\service_testing\\MiniPro\\test_login.py:140: AssumptionFailure\n>>\tpytest.assume(response['Desc'] == '成功')\nAssertionError: assert False",
    "statusTrace" : "self = <autotest.testcases.service_testing.MiniPro.test_login.TestLoin object at 0x000001BB790E1F28>\n\n    @allure.feature('小程序登录')\n    @allure.story('登录')\n    @allure.title('输入正确的验证码和手机号码,tenant_type为1登录')\n    @allure.severity('blocker')\n    def test_minilogin_0003(self):\n        \"\"\"\n                        输入正确的验证码和手机号码,tenant_type为1登录\n    \n        \"\"\"\n        print('\\n{}测试开始\\n'.format(self.test_minilogin_0003.__name__))\n        with allure.step('step1:获取验证码'):\n            # 获取身份证已审核通过的手机号码\n            mobilesql = f\"select mobile,uuid,guid from member_user where uuid <> 0 order by user_id desc limit 1\"\n            res = self.db.selectsql(mobilesql)\n            mobile=res[0][0]\n            uuid=res[0][1]\n            guid=res[0][2]\n            #获取验证码\n            reqdata = databuild(SPhone=mobile)\n            res = self.directsq.sendRequests(get_vcode_api, reqdata)\n            pytest.assume(res.json()['Code'] == 0)\n            pytest.assume(res.json()['Desc'] == '成功')\n            code = res.json()['Data']\n        with allure.step('step2:输入正确的手机号码和验证码登录'):\n            #登录\n            reqdata = databuild(mobile=mobile, vcode=code, tenant_type=1)\n            res = self.directsq.sendRequests(applet_Login_api, reqdata)\n            pytest.assume(res.status_code == 200)\n            response = res.json()\n            pytest.assume(response['Code'] == 0)\n            pytest.assume(response['Desc'] == '成功')\n        with allure.step('step2:校验接口返回的数据'):\n            # 拼接client_id和zt_client_id\n            client_id = zp_tenant_id + '-' + str(guid)\n            zt_client_id = zp_tenant_id + '-' + str(guid)\n            # 校验client_id和zt_client_id\n>           pytest.assume(response['Data']['client_id'] == client_id)\nE           pytest_assume.plugin.FailedAssumption: \nE           Original Failure:\nE           \nE           >> TypeError(\"'NoneType' object is not subscriptable\")\nE           \nE           2 Failed Assumptions:\nE           \nE           testcases\\service_testing\\MiniPro\\test_login.py:139: AssumptionFailure\nE           >>\tpytest.assume(response['Code'] == 0)\nE           AssertionError: assert False\nE           \nE           testcases\\service_testing\\MiniPro\\test_login.py:140: AssumptionFailure\nE           >>\tpytest.assume(response['Desc'] == '成功')\nE           AssertionError: assert False\n\ntestcases\\service_testing\\MiniPro\\test_login.py:146: FailedAssumption",
    "steps" : [ {
      "name" : "step1:获取验证码",
      "time" : {
        "start" : 1594631308623,
        "stop" : 1594631309065,
        "duration" : 442
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 0,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "step2:输入正确的手机号码和验证码登录",
      "time" : {
        "start" : 1594631309066,
        "stop" : 1594631309337,
        "duration" : 271
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 0,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "step2:校验接口返回的数据",
      "time" : {
        "start" : 1594631309337,
        "stop" : 1594631309337,
        "duration" : 0
      },
      "status" : "broken",
      "statusMessage" : "TypeError: 'NoneType' object is not subscriptable\n",
      "statusTrace" : "  File \"E:\\study\\python\\autotest\\testcases\\service_testing\\MiniPro\\test_login.py\", line 146, in test_minilogin_0003\n    pytest.assume(response['Data']['client_id'] == client_id)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "shouldDisplayMessage" : true,
      "attachmentsCount" : 0,
      "stepsCount" : 0,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "ece9d49bb5cc2d9c",
      "name" : "log",
      "source" : "ece9d49bb5cc2d9c.txt",
      "type" : "text/plain",
      "size" : 517
    } ],
    "parameters" : [ ],
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 1,
    "stepsCount" : 3,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "_Class__pytest_setup_method::0",
    "time" : {
      "start" : 1594631309345,
      "stop" : 1594631309345,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "_Class__pytest_setup_class::0",
    "time" : {
      "start" : 1594631309346,
      "stop" : 1594631309346,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "登录"
  }, {
    "name" : "severity",
    "value" : "blocker"
  }, {
    "name" : "feature",
    "value" : "小程序登录"
  }, {
    "name" : "parentSuite",
    "value" : "testcases.service_testing.MiniPro"
  }, {
    "name" : "suite",
    "value" : "test_login"
  }, {
    "name" : "subSuite",
    "value" : "TestLoin"
  }, {
    "name" : "host",
    "value" : "DESKTOP-9JNMRHP"
  }, {
    "name" : "thread",
    "value" : "26496-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testcases.service_testing.MiniPro.test_login"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "blocker",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "8d29aad905b23491.json",
  "parameterValues" : [ ]
}