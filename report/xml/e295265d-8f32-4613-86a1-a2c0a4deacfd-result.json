{"name": "生成预支名单5", "status": "failed", "statusDetails": {"message": "pytest_assume.plugin.FailedAssumption: \nOriginal Failure:\n\n>> TypeError(\"'NoneType' object is not subscriptable\")\n\n1 Failed Assumptions:\n\ntestcases\\service_testing\\PQ\\test_settle_namelist.py:413: AssumptionFailure\n>>\tpytest.assume(res['Data']['RecordCount'] == 1)\nAssertionError: assert False", "trace": "self = <autotest.testcases.service_testing.PQ.test_settle_namelist.TestSettleNameList object at 0x000001BB799828D0>\nmember_manage = <common.business_func.mem_information_manag_func.Member_information_management_func object at 0x000001BB77E720B8>\nent = ['仁宝电子', 3, '仁宝电子科技（昆山）有限公司', 1]\nname_manage = <common.business_func.namelist.NameList object at 0x000001BB77E72EF0>\norder_manage = <common.business_func.orders.Order object at 0x000001BB77E72240>\ngroup_manage = <common.business_func.group_management.GroupManagement object at 0x000001BB77E72CF8>\nrandom_agent = [22701, '我的打工网']\nadvance_manage = <common.business_func.advance_management.AdvanceManage object at 0x000001BB77E72A90>\n\n    @allure.feature('可预支名单')\n    @allure.story('生成预支名单')\n    @allure.title('生成预支名单5')\n    @allure.severity('blocker')\n    def test_settle_namelist_0005(self, member_manage, ent, name_manage, order_manage, group_manage, random_agent,\n                                  advance_manage):\n        \"\"\"生成预支名单5\"\"\"\n        with allure.step(\"预置条件：会员三卡仅认证身份证\"):\n            # 上传身份证\n            self.applet.upload_idcard(fakeridcardpicture)\n            # 生成未认证过的身份证号码\n            for i in range(100):\n                idnum = create_IDCard()\n                res = member_manage.get_idcardlist(auditsts=2, IdCardNum=idnum)\n                if res['Data']['RecordCount'] == 0:\n                    break\n            name = create_name()\n            # 审核身份证\n            member_manage.audit_idcard(phone=self.mobile, idcardnum=idnum, rname=name)\n            # 获取工种\n            res = group_manage.get_ent_borrow_list(IsEnabled=1, RcrtType=2, EntShortName=ent[0])\n            if res['Data']['RecordCount'] != 0:\n                lst = res['Data']['RecordList']\n                entborrow_dic = lst[random.randint(0, len(lst) - 1)]\n                borrowname = entborrow_dic['EntBorrowName']\n            else:\n                borrowname = ent[0] + '周薪薪'\n                group_manage.add_or_update_ent_borrow(CoopEntName=borrowname, CoopEntId=0, EntId=ent[3], IsEnabled=1,\n                                                      RcrtType=2, Flag=1)\n            # 录入名单\n            name_manage.add_name_pq(entbrorrowname=borrowname, FromSpName=random_agent[1], mobile=self.mobile,\n                                    idnum=idnum, name=name)\n            # 创建订单\n            order_manage.create_order_pq(entbrorrowname=borrowname, ReceiverType=2, PriceUnit=1)\n            # 审核订单\n            order_manage.Judge_Order(auditsts=2, orderid=order_manage.orderid)\n            # 分配订单\n            order_manage.publishOrderToSupplier(agentname=random_agent[1], OrderId=order_manage.orderid)\n    \n            # 上传工牌\n            self.applet.upload_workcard(workCardFile=workCardpicture, entname=ent[0])\n    \n        with allure.step(\"step1：名单绑定订单，检查预支名单列表\"):\n            # 名单绑定订单\n            name_manage.bind_order(orderid=order_manage.orderid, namelist=[name_manage.newnameid_pq])\n        with allure.step(\"预期结果：生成一条预支名单记录\"):\n            # 等待30s\n            time.sleep(30)\n            # 查询预支名单\n            res = advance_manage.zxx_getNameList(IdCardNum=idnum)\n            pytest.assume(res['Data']['RecordCount'] == 1)\n>           pytest.assume(res['Data']['RecordList'][0]['Mobile'] == self.mobile)\nE           pytest_assume.plugin.FailedAssumption: \nE           Original Failure:\nE           \nE           >> TypeError(\"'NoneType' object is not subscriptable\")\nE           \nE           1 Failed Assumptions:\nE           \nE           testcases\\service_testing\\PQ\\test_settle_namelist.py:413: AssumptionFailure\nE           >>\tpytest.assume(res['Data']['RecordCount'] == 1)\nE           AssertionError: assert False\n\ntestcases\\service_testing\\PQ\\test_settle_namelist.py:414: FailedAssumption"}, "description": "生成预支名单5", "steps": [{"name": "预置条件：会员三卡仅认证身份证", "status": "passed", "start": 1594631602500, "stop": 1594631604798}, {"name": "step1：名单绑定订单，检查预支名单列表", "status": "passed", "start": 1594631604798, "stop": 1594631604875}, {"name": "预期结果：生成一条预支名单记录", "status": "broken", "statusDetails": {"message": "TypeError: 'NoneType' object is not subscriptable\n", "trace": "  File \"E:\\study\\python\\autotest\\testcases\\service_testing\\PQ\\test_settle_namelist.py\", line 414, in test_settle_namelist_0005\n    pytest.assume(res['Data']['RecordList'][0]['Mobile'] == self.mobile)\n"}, "start": 1594631604876, "stop": 1594631635068}], "attachments": [{"name": "log", "source": "e3b07b9c-0d28-40be-947f-104b976ee42a-attachment.txt", "type": "text/plain"}], "start": 1594631602500, "stop": 1594631635068, "uuid": "19249769-90cf-4988-a47c-1e7edde60100", "historyId": "58bd08c669ef4a4b92fecf8f9d4f9fa7", "testCaseId": "f92d75d3e67caab2e759678b4d173f21", "fullName": "testcases.service_testing.PQ.test_settle_namelist.TestSettleNameList#test_settle_namelist_0005", "labels": [{"name": "severity", "value": "blocker"}, {"name": "feature", "value": "可预支名单"}, {"name": "story", "value": "生成预支名单"}, {"name": "parentSuite", "value": "testcases.service_testing.PQ"}, {"name": "suite", "value": "test_settle_namelist"}, {"name": "subSuite", "value": "TestSettleNameList"}, {"name": "host", "value": "DESKTOP-9JNMRHP"}, {"name": "thread", "value": "26496-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.service_testing.PQ.test_settle_namelist"}]}